name: CI

on: [push]

jobs:

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.6', '3.7' ]

    name: pytest (${{ matrix.python-version }})
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      run: sudo pip install pipenv
    - name: Setup pipenv
      run: pipenv sync --dev
    - name: Run test suite
      run: pipenv run pytest -vv

  lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - name: Install pipenv
      run: sudo pip install pipenv
    - name: Setup pipenv
      run: pipenv sync --dev
    - name: Check black formatting
      run: pipenv run black --check .
    - name: Mypy
      run: pipenv run mypy tornado_async_transformer
    - name: Deploy to pypi
      if: github.ref == 'refs/heads/master'
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: pipenv run bundle && pipenv run deploy


  deploy:

    runs-on: ubuntu-latest
    needs:
      - lint
      - test

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - name: Install pipenv
      run: sudo pip install pipenv
    - name: Setup pipenv
      run: pipenv sync --dev
    - name: Deploy to pypi
      if: github.ref == 'refs/heads/master'
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: pipenv run bundle && pipenv run deploy
